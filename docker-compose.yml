x-deploy-policy: &x-deploy-policy
  replicas: 2
  placement:
    max_replicas_per_node: 1
    constraints:
      - node.role == manager
    preferences:
      - spread: node.labels.prometheus
  update_config:
    parallelism: 1
    delay: 30s
    order: stop-first
    failure_action: rollback
  rollback_config:
    parallelism: 1
    delay: 30s
  restart_policy:
    condition: on-failure
    delay: 30s
    max_attempts: 3
    window: 120s

x-default-logging: &x-default-logging
  options:
    max-size: "12m"
    max-file: "5"
  driver: json-file

configs:
  prometheus.yml:
    template_driver: golang
    name: prometheus-v1.0.yml
    file: configs/prometheus.yml

  # Rules
  node.rules.yml:
    file: rules/node.rules.yml
  service.rules.yml:
    file: rules/service.rules.yml
  task.rules.yml:
    file: rules/task.rules.yml

services:
  prometheus:
    image: prom/prometheus:latest
    hostname: prometheus-{{.Task.Slot}}-{{.Task.ID}}
    user: root
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--storage.tsdb.retention.size=60GB"
      - "--storage.tsdb.retention.time=30d"
      - "--log.level=info"
    environment:
      - TASK_SLOT={{.Task.Slot}}
    networks:
      - dockerswarm_monitoring
    ports:
      - 9090:9090
    volumes:
      - prometheus:/prometheus
      - /var/run/docker.sock:/var/run/docker.sock:ro
    configs:
      - source: prometheus.yml
        target: /etc/prometheus/prometheus.yml

      # Rules
      - source: node.rules.yml
        target: /etc/prometheus/node.rules.yml
      - source: service.rules.yml
        target: /etc/prometheus/service.rules.yml
      - source: task.rules.yml
        target: /etc/prometheus/task.rules.yml
    deploy: *x-deploy-policy
    logging: *x-default-logging

volumes:
  prometheus:
    name: prometheus-{{.Task.Slot}}

networks:
  dockerswarm_monitoring:
    name: dockerswarm_monitoring
    external: true
